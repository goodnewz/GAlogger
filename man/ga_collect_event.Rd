% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkg.R
\name{ga_collect_event}
\alias{ga_collect_event}
\title{Send events to Google Analytics}
\usage{
ga_collect_event(user = NULL, event_category = "stats",
  event_action = "calculate", event_label, event_value)
}
\arguments{
\item{user}{a list with a user_id and client_id. Is set by ga_set_user_id or ga_init_user.}

\item{event_category}{a character string of length 1 with the category of the event}

\item{event_action}{a character string of length 1 with the action of the event}

\item{event_label}{a character string of length 1 with the label of the event. This is optional.}

\item{event_value}{a character string of length 1 with the value of the event. This is optional.}
}
\value{
invisibly the result of a call to \code{\link[curl]{curl_fetch_memory}} which sends the data to Google Analytics
or an object of try-error if the internet is not working
}
\description{
Send events to Google Analytics.
If an event happens in your script, use this function to send the event to Google Analytics.
An event has a category, an action and optionally a label and a value can be set for the event. \cr
Possible use cases of this are sending when a user loads your package, sending when a user does some action on your shiny application,
storing when a user uses your R webservice, keeping information on the status of a long-running process, sending and error message ...\cr

Events can be viewed in the Google Analytics > Behaviour > Events tab or in the Real-Time part of Google Analytics.
}
\examples{

user <- ga_set_user_id(user_id=NULL) // do not use the user ID to identify and track your user
user <- ga_set_user_id(user_id="Bob")


ga_collect_event(user=user,event_category = "Start", event_action = "shiny app launched")
ga_collect_event(user=user,event_category = "Simulation",
                 event_label = "Launching Bayesian multi-level model",
                 event_action = "How many simulations", event_value = 10)
ga_collect_event(user=user,event_category = "Error",
                 event_label = "convergence failed", event_action = "Oh no")
ga_collect_event(user=user,event_category = "Error",
                 event_label = "Bad input", event_action = "send the firesquad", event_value=911)
}
